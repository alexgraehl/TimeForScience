

If you just check files out with Mercurial, some programs (Perl ones in particular) will not work properly, because various paths must be properly set.

Here is how to do that:



1. Find out what your shell is, by typing:
     echo $SHELL
   on the command line.



2a. If the result of step 1 is "/bin/bash" or anything else ending in "bash", then you want to
 add these lines to the end of your ~/.bash_profile

export TIME_FOR_SCIENCE_DIR=$HOME/TimeForScience
export PATH=$TIME_FOR_SCIENCE_DIR/Lab_Code/Perl/Tools:$PATH
export PATH=$TIME_FOR_SCIENCE_DIR/Lab_Code/Perl/Scientific:$PATH
export PATH=$TIME_FOR_SCIENCE_DIR/Lab_Code/Python/Tools:$PATH
export PATH=$TIME_FOR_SCIENCE_DIR/Lab_Code/Shell:$PATH
export PATH=$TIME_FOR_SCIENCE_DIR/Lab_Code/R:$PATH



2b. Or, if the result of "echo $SHELL" is "/bin/tcsh" or anything else ending in "tcsh", then you want to add these lines to your ~/.cshrc file:

### ADD THE LINES BELOW TO YOUR ~/.cshrc FILE TO MAKE IT WORK WITH THE LAB MERCURIAL REPOSITORY

In tcsh or csh
if(! $?path) then
	set path=""
endif

setenv TIME_FOR_SCIENCE_DIR $HOME/TimeForScience

## Make sure all the lines below end with a "\", or else this command will not work!!
## Do not put any comments on the same line after the backslash!!
set path=($TIME_FOR_SCIENCE_DIR/Lab_Code/Perl/Tools \
	$TIME_FOR_SCIENCE_DIR/Lab_Code/Perl/Scientific \
	$TIME_FOR_SCIENCE_DIR/Lab_Code/Python/Tools \
	$TIME_FOR_SCIENCE_DIR/Lab_Code/Shell \
	$TIME_FOR_SCIENCE_DIR/Lab_Code/R \
	$path) ## <-- this line does not have to end with a backslash

### ADD THE LINES ABOVE TO YOUR ~/.cshrc FILE TO MAKE IT WORK WITH THE LAB MERCURIAL REPOSITORY




3. Now open a new shell, and type "which sets_overlap.pl" . It should say something like:
	/Users/yourname/TimeForScience/Lab_Code/Perl/Tools/sets_overlap.pl
	(This is what we want it to be)
If it says:
	/Users/yourname/cvs_directory/perl/tools/sets_overlap.pl
	(this is *not* what we want it to be)
then that means that the $PATH is not actually set to use the updated Mercurial repository,
but is instead using the old CVS repository.


4. If you make changes to files and want to commit them, OR you want to update your repository, look in the "0000_How_to_check_in_code.txt" file for instructions.


