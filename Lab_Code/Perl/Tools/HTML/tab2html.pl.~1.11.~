#!/usr/bin/perl

##############################################################################
##############################################################################
##
## tab2html.pl
##
##############################################################################
##############################################################################
##
## Written by Josh Stuart in the lab of Stuart Kim, Stanford University.
##
##  Email address: jstuart@stanford.edu
##          Phone: (650) 725-7612
##
## Postal address: Department of Developmental Biology
##                 Beckman Center Room B314
##                 279 Campus Dr.
##                 Stanford, CA 94305
##
##       Web site: http://www.smi.stanford.edu/people/stuart
##
##############################################################################
##############################################################################
##
## Written: 00/00/02
## Updated: 00/00/02
##
##############################################################################
##############################################################################

require "$ENV{MYPERLDIR}/lib/libfile.pl";
require "$ENV{MYPERLDIR}/lib/libhtml.pl";

use strict;
use warnings;

# Flush output to STDOUT immediately.
$| = 1;

my @flags   = (
                  [     '-q', 'scalar',       0,      1]
                , [     '-d', 'scalar',    "\t",  undef]
                , [     '-h', 'scalar',       0,  undef]
                , [    '-ne', 'scalar',       0,      1]
                , [   '-num', 'scalar',       0,      1]
                , [  '-html', 'scalar',       0,      1]
                , [  '-body', 'scalar',       0,      1]
                , [  '-link', 'scalar',       0,      1]
                , ['-border', 'scalar',       0,      1]
                , ['-bgcolor', 'scalar',  undef,  undef]
                , [ '--file', 'scalar',     '-',  undef]
              );

my %args = %{&parseArgs(\@ARGV, \@flags)};

if(exists($args{'--help'}))
{
   print STDOUT <DATA>;
   exit(0);
}

my $verbose = not($args{'-q'});
my $delim   = $args{'-d'};
my $headers = $args{'-h'};
my $print_enclosing_table_tags = not($args{'-ne'});
my $number_lines = $args{'-num'};
my $html    = $args{'-html'};
my $body    = $args{'-body'};
my $border  = $args{'-border'};
my $link    = $args{'-link'};
my $bgcolor = $args{'-bgcolor'};
my $file    = $args{'--file'};

my @header;
my $line_no = 0;
open(FILE, $file) or die("Could not open file '$file' for reading");

$html and print STDOUT "<html>\n";
$body and print STDOUT "<body>\n";

my $bgcolor_string = ($bgcolor) ? " BGCOLOR=\"${bgcolor}\" " : '';

$print_enclosing_table_tags and print STDOUT qq{<table border="$border" ${bgcolor_string} cellpadding=3 cellspacing=1>\n};

while(<FILE>)
{
   $line_no++;

   my @x = split($delim, $_);

   chomp($x[$#x]);
   
   if($line_no <= $headers)
   {
      for(my $i = 0; $i < scalar(@x); $i++)
      {
         if(defined($header[$i]))
         {
            $header[$i] .= '\n' . $x[$i];
         }
         else
         {
            $header[$i]  = $x[$i];
         }
      }

      if($line_no == $headers)
      {
	 if ($number_lines) { unshift(@header, "#"); } # add a header for the line number column
         my $row = &getHtmlTableRow(\@header);
         print STDOUT $row, "\n";
      }
   }
   else
   {
      if($link) {
         for(my $i = 0; $i < @x; $i++) {
            $x[$i] = &wrapUrl($x[$i]);
         }
      }
      if ($number_lines) { unshift(@x, ($line_no - $headers)); } # add the line number to the beginning
      my $row = &getHtmlTableRow(\@x);
      print STDOUT $row, "\n";
   }
}
close(FILE);

if ($print_enclosing_table_tags) { print STDOUT "</table>\n"; }

if ($html) { print STDOUT "</html>\n"; }
if ($body) { print STDOUT "</body>\n"; }

exit(0);

sub wrapUrl {
   my ($text, $link, $tag_prefix, $link_prefix) = @_;
   $link = defined($link) ? $link : $text;
   $tag_prefix = defined($tag_prefix) ? $tag_prefix : '<a href=';
   $link_prefix = defined($link_prefix) ? $link_prefix : '';
   my $url = undef;
   if(defined($text)) {
      $url =   $tag_prefix 
             . '"'
             . $link_prefix
             . $link
             . '">'
             . $text
             . '</a>'
             ;
   }
   return $url;
}


__DATA__
syntax: tab2html.pl [OPTIONS] [FILE | < FILE]

OPTIONS are:

-q: Quiet mode (default is verbose)

-f COL: Set the key column to COL (default is 1).

-k COL: Same as -f.

-d DELIM: Set the field delimiter to DELIM (default is tab).

-h HEADERS: Set the number of header lines to HEADERS (default is 1).

-ne NO ENCLOSING: Prevents the enclosing <table>...</table> tags
      from being printed. Useful if you want to format the table
      manually outside of this script.

-num NUMBER LINES: Numbers each row in the table, starting from 1.

-link: Wrap a link around each entry in the table.

-border

-body

-html



